@page "/"
@inject IJSRuntime js
@inject Blazored.LocalStorage.ILocalStorageService localStorage

<div class="opener">
    <h4 id="test">Welcome to the Shawnee Switchel Digital Shop!</h4>
    <p>Stop by every once and a while to get the latest on what's happening.</p>
</div>

<a href="updates" class="btn btn-dark btn-outline-light mb-2">VIEW UPDATES</a>
<a href="order" class="btn btn-outline-light mb-2 ml-auto btn-order">PLACE ORDER</a>
<br />

<div class="card shadow">
    <div class="card-body">
        <h4>Your Orders</h4>
        <hr />
        @if (isLoaded)
        {
            foreach (var order in ordersToDisplay)
            {
                <p>Your order for @order.productName was received on @order.day!</p><br />
            }
        }
        else
        {
            <p>There are no open orders at this time.</p>
        }
    </div>
</div>

<button id="notifications" class="btn btn-dark" hidden>Don't Click ME!</button>

@code {

    public bool isLoaded = false;

    List<OpenOrder> ordersToDisplay = new List<OpenOrder>();

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await js.InvokeVoidAsync("initializeCounterComponent");
        }
    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var ordersFromLS = await localStorage.GetItemAsync<List<OpenOrder>>("Orders");

            if (ordersFromLS != null)
            {
                ordersToDisplay = ordersFromLS;
                Console.WriteLine(ordersToDisplay[1].orderNumber);

                isLoaded = true;
            }
        }
        catch (Exception ex)
        {
            // TODO: build out error handling
        }

        //Console.WriteLine("test");
        //Console.WriteLine(ordersToDisplay.Count);
    }

}


